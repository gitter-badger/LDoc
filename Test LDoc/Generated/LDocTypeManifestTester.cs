// WARNING: this file was autogenerated by LUnit. Remove this line or move this file to prevent this file's contents from being overwritten.
using Xunit.Abstractions;
using LCore.LUnit;
using Xunit;
using System;
using LCore.LDoc.Markdown.Manifest;
namespace LDoc_Tests.LCore.LDoc.Markdown.Manifest
{
    ///<summary>
    /// Covering class: LCore.LDoc.Markdown.Manifest.LDocTypeManifest
    ///
    ///LUnit has Autogenerated 4 method stubs:
    ///</summary>
    public partial class LDocTypeManifestTester : XUnitOutputTester, IDisposable
    {
        public LDocTypeManifestTester([NotNull] ITestOutputHelper Output) : base(Output) { }

        public void Dispose() { }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.LDoc)+ "." + nameof(global::LCore.LDoc.Markdown)+ "." + nameof(global::LCore.LDoc.Markdown.Manifest)+ "." + nameof(LDocTypeManifest)+ "." + nameof(LDocTypeManifest.GetDocument) + "(MemberInfo) => DocumentManifest")]
        public void GetDocument()
        {
            // TODO: Implement method test LCore.LDoc.Markdown.Manifest.LDocTypeManifest.GetDocument
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.LDoc)+ "." + nameof(global::LCore.LDoc.Markdown)+ "." + nameof(global::LCore.LDoc.Markdown.Manifest)+ "." + nameof(LDocTypeManifest)+ "." + nameof(LDocTypeManifest.CreateManifestJSON) + "() => String")]
        public void CreateManifestJSON()
        {
            // TODO: Implement method test LCore.LDoc.Markdown.Manifest.LDocTypeManifest.CreateManifestJSON
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.LDoc)+ "." + nameof(global::LCore.LDoc.Markdown)+ "." + nameof(global::LCore.LDoc.Markdown.Manifest)+ "." + nameof(LDocTypeManifest)+ "." + nameof(LDocTypeManifest.FromJSON) + "(String) => LDocTypeManifest")]
        public void FromJSON()
        {
            // TODO: Implement method test LCore.LDoc.Markdown.Manifest.LDocTypeManifest.FromJSON
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.LDoc)+ "." + nameof(global::LCore.LDoc.Markdown)+ "." + nameof(global::LCore.LDoc.Markdown.Manifest)+ "." + nameof(LDocTypeManifest)+ "." + nameof(LDocTypeManifest.CaptureHistory) + "(IEnumerable<GeneratedDocument>)")]
        public void CaptureHistory()
        {
            // TODO: Implement method test LCore.LDoc.Markdown.Manifest.LDocTypeManifest.CaptureHistory
        }

    }
}
