// WARNING: this file was autogenerated by LUnit. Remove this line or move this file to prevent this file's contents from being overwritten.
using Xunit.Abstractions;
using LCore.LUnit;
using Xunit;
using System;
using LCore.LDoc.Markdown;
namespace LDoc_Tests.LCore.LDoc.Markdown
{
    ///<summary>
    /// Covering class: LCore.LDoc.Markdown.GeneratedDocument
    ///
    ///LUnit has Autogenerated 9 method stubs:
    ///</summary>
    public partial class GeneratedDocumentTester : XUnitOutputTester, IDisposable
    {
        public GeneratedDocumentTester([NotNull] ITestOutputHelper Output) : base(Output) { }

        public void Dispose() { }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.LDoc)+ "." + nameof(global::LCore.LDoc.Markdown)+ "." + nameof(GeneratedDocument)+ "." + nameof(GeneratedDocument.Line) + "(String)")]
        public void Line()
        {
            // TODO: Implement method test LCore.LDoc.Markdown.GeneratedDocument.Line
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.LDoc)+ "." + nameof(global::LCore.LDoc.Markdown)+ "." + nameof(GeneratedDocument)+ "." + nameof(GeneratedDocument.Table) + "(IEnumerable<IEnumerable<String>>, Boolean, Align[], Boolean, String)")]
        public void Table()
        {
            // TODO: Implement method test LCore.LDoc.Markdown.GeneratedDocument.Table
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.LDoc)+ "." + nameof(global::LCore.LDoc.Markdown)+ "." + nameof(GeneratedDocument)+ "." + nameof(GeneratedDocument.Header) + "(String, Int32, Boolean) => String")]
        public void Header()
        {
            // TODO: Implement method test LCore.LDoc.Markdown.GeneratedDocument.Header
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.LDoc)+ "." + nameof(global::LCore.LDoc.Markdown)+ "." + nameof(GeneratedDocument)+ "." + nameof(GeneratedDocument.HeaderUnderline) + "(String, Int32)")]
        public void HeaderUnderline()
        {
            // TODO: Implement method test LCore.LDoc.Markdown.GeneratedDocument.HeaderUnderline
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.LDoc)+ "." + nameof(global::LCore.LDoc.Markdown)+ "." + nameof(GeneratedDocument)+ "." + nameof(GeneratedDocument.Link) + "(String, String, String, Boolean, Boolean, Boolean) => String")]
        public void Link()
        {
            // TODO: Implement method test LCore.LDoc.Markdown.GeneratedDocument.Link
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.LDoc)+ "." + nameof(global::LCore.LDoc.Markdown)+ "." + nameof(GeneratedDocument)+ "." + nameof(GeneratedDocument.Badge) + "(String, String, String, Boolean) => String")]
        public void Badge()
        {
            // TODO: Implement method test LCore.LDoc.Markdown.GeneratedDocument.Badge
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.LDoc)+ "." + nameof(global::LCore.LDoc.Markdown)+ "." + nameof(GeneratedDocument)+ "." + nameof(GeneratedDocument.GetRelativePath) + "(String) => String")]
        public void GetRelativePath()
        {
            // TODO: Implement method test LCore.LDoc.Markdown.GeneratedDocument.GetRelativePath
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.LDoc)+ "." + nameof(global::LCore.LDoc.Markdown)+ "." + nameof(GeneratedDocument)+ "." + nameof(GeneratedDocument.Generate) + "()")]
        public void Generate()
        {
            // TODO: Implement method test LCore.LDoc.Markdown.GeneratedDocument.Generate
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.LDoc)+ "." + nameof(global::LCore.LDoc.Markdown)+ "." + nameof(GeneratedDocument)+ "." + nameof(GeneratedDocument.GetLiveUrl) + "() => String")]
        public void GetLiveUrl()
        {
            // TODO: Implement method test LCore.LDoc.Markdown.GeneratedDocument.GetLiveUrl
        }

    }
}
