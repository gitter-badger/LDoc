// WARNING: this file was autogenerated by LUnit. Remove this line or move this file to prevent this file's contents from being overwritten.
using Xunit.Abstractions;
using LCore.LUnit;
using Xunit;
using System;
using LCore.LDoc.Markdown;
namespace LDoc_Tests.LCore.LDoc.Markdown
{
    ///<summary>
    /// Covering class: LCore.LDoc.Markdown.MarkdownDocument_Type
    ///
    ///LUnit has Autogenerated 6 method stubs:
    ///</summary>
    public partial class MarkdownDocument_TypeTester : XUnitOutputTester, IDisposable
    {
        public MarkdownDocument_TypeTester([NotNull] ITestOutputHelper Output) : base(Output) { }

        public void Dispose() { }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.LDoc)+ "." + nameof(global::LCore.LDoc.Markdown)+ "." + nameof(MarkdownDocument_Type)+ "." + nameof(MarkdownDocument_Type.GetBadges_Info) + "(GeneratedDocument) => List<String>")]
        public void GetBadges_Info()
        {
            // TODO: Implement method test LCore.LDoc.Markdown.MarkdownDocument_Type.GetBadges_Info
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.LDoc)+ "." + nameof(global::LCore.LDoc.Markdown)+ "." + nameof(MarkdownDocument_Type)+ "." + nameof(MarkdownDocument_Type.GetBadge_TotalMembers) + "(GeneratedDocument) => String")]
        public void GetBadge_TotalMembers()
        {
            // TODO: Implement method test LCore.LDoc.Markdown.MarkdownDocument_Type.GetBadge_TotalMembers
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.LDoc)+ "." + nameof(global::LCore.LDoc.Markdown)+ "." + nameof(MarkdownDocument_Type)+ "." + nameof(MarkdownDocument_Type.GetBadges_Coverage) + "(GeneratedDocument) => List<String>")]
        public void GetBadges_Coverage()
        {
            // TODO: Implement method test LCore.LDoc.Markdown.MarkdownDocument_Type.GetBadges_Coverage
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.LDoc)+ "." + nameof(global::LCore.LDoc.Markdown)+ "." + nameof(MarkdownDocument_Type)+ "." + nameof(MarkdownDocument_Type.GetBadge_TotalNotImplemented) + "(GeneratedDocument, UInt32, Boolean) => String")]
        public void GetBadge_TotalNotImplemented()
        {
            // TODO: Implement method test LCore.LDoc.Markdown.MarkdownDocument_Type.GetBadge_TotalNotImplemented
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.LDoc)+ "." + nameof(global::LCore.LDoc.Markdown)+ "." + nameof(MarkdownDocument_Type)+ "." + nameof(MarkdownDocument_Type.GetBadge_TotalBugs) + "(GeneratedDocument, UInt32, Boolean) => String")]
        public void GetBadge_TotalBugs()
        {
            // TODO: Implement method test LCore.LDoc.Markdown.MarkdownDocument_Type.GetBadge_TotalBugs
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.LDoc)+ "." + nameof(global::LCore.LDoc.Markdown)+ "." + nameof(MarkdownDocument_Type)+ "." + nameof(MarkdownDocument_Type.GetBadge_TotalTodos) + "(GeneratedDocument, UInt32, Boolean) => String")]
        public void GetBadge_TotalTodos()
        {
            // TODO: Implement method test LCore.LDoc.Markdown.MarkdownDocument_Type.GetBadge_TotalTodos
        }

    }
}
